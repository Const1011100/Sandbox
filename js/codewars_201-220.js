//*-Task №201 Formatting decimal places #0 (8kyu)
/*
Кожне число має бути відформатовано таким чином, щоб воно було округлено до двох знаків після коми.
Вам не потрібно перевіряти, чи є введене число дійсним, оскільки в тестах використовуються лише дійсні числа.
Example:
5.5589 is rounded 5.56
3.3424 is rounded 3.34
*/

// Мій варіант
function twoDecimalPlaces(n) {
    return Number(n.toFixed(2));
}

// Цікаві варіанти з Codewars
function twoDecimalPlaces_(n) {
    return Math.round(n * 100) / 100;
}

// ================================================================================================
// ================================================================================================
//*-Task №202 Simple validation of a username with regex (8kyu)
/*
Напишіть простий регулярний вираз для підтвердження імені користувача.
Дозволені символи: букви нижнього регістру,числа,підкреслення.
Довжина має бути від 4 до 16 символів (обидва включені).
*/

// Мій варіант
function validateUsr(username) {
    const res = /^[a-z0-9_]{4,16}$/.test(username);
    return res;
}

// Цікаві варіанти з Codewars

// ================================================================================================
// ================================================================================================
//*-Task №201 Regex count lowercase letters (8kyu)
/*
Ваше завдання — просто порахувати загальну кількість малих літер у рядку.

"abc" ===> 3
"abcABC123" ===> 3
"abcABC123!@€£#$%^&*()_-+=}{[]|\':;?/>.<,~" ===> 3
"" ===> 0;
"ABC123!@€£#$%^&*()_-+=}{[]|\':;?/>.<,~" ===> 0
"abcdefghijklmnopqrstuvwxyz" ===> 26
*/

// Мій варіант
function lowercaseCount(str) {
    let count = str.match(/[a-z]/g);
    return count ? count.length : 0;
}

// Цікаві варіанти з Codewars
function lowercaseCount_(str) {
    return (str.match(/[a-z]/g) || []).length
}
// ================================================================================================
// ================================================================================================
//*-Task №202 Check same case (8kyu)
/*
Напишіть функцію, яка перевірятиме, чи збігаються два наведені символи.

Якщо один із символів не є літерою, поверніть -1
Якщо обидва символи мають однаковий регістр, поверніть 1
Якщо обидва символи є літерами, але не збігаються, поверніть 0

'a' and 'g' returns 1
'A' and 'C' returns 1
'b' and 'G' returns 0
'B' and 'g' returns 0
'0' and '?' returns -1
*/
// Мій варіант
function sameCase(a, b) {
    if (!/[a-zA-Z]/.test(a) || !/[a-zA-Z]/.test(b)) { return -1 };
    if ((a === a.toUpperCase() && b === b.toUpperCase()) || (a === a.toLowerCase() && b === b.toLowerCase())) {
        return 1;
    } else {
        return 0;
    }
}

// Цікаві варіанти з Codewars
const sameCase_ = (a, b) => /[a-z]/i.test(a) && /[a-z]/i.test(b) ? Number(/[a-z]/.test(a) == /[a-z]/.test(b)) : -1;
// ================================================================================================
// ================================================================================================
//*-залишилось 180шт