//*-Task №401 Categorize New Member (7kyu)
/*
Крокетний клуб Western Suburbs має дві категорії членства: старше та відкрите.
Їм потрібна ваша допомога з аплікаційною формою, у якій потенційним членам буде вказано, до якої
категорії вони будуть призначені.

Щоб бути старшим, член повинен бути не менше 55 років і мати гандикап більше 7.
У цьому крокетному клубі гандикап коливається від -2 до +26; чим кращий гравець, тим нижчий гандикап.

Введення
Вхідні дані складатимуться зі списку пар. Кожна пара містить інформацію про одного потенційного члена.
Інформація складається з цілого числа для віку людини та цілого числа для вади людини.

Вихід
Вихідні дані складатимуться зі списку рядкових значень (у Haskell і C: Open або Senior),
які вказуватимуть, чи буде відповідний член поміщений у старшу чи відкриту категорію.

Приклад
input =  [[18, 20], [45, 2], [61, 12], [37, 6], [21, 21], [78, 9]]
output = ["Open", "Open", "Senior", "Open", "Open", "Senior"]
*/

// Мій варіант
function openOrSenior(data) {
    return data.map(elem => elem[0] >= 55 && elem[1] > 7 ? 'Senior' : 'Open');
}
// Цікаві варіанти з Codewars
function openOrSenior_(data) {
    return data.map(([age, handicap]) => (age > 54 && handicap > 7) ? 'Senior' : 'Open');
}
// ================================================================================================
// ================================================================================================
//*-Task №402 Find the next perfect square! (7kyu)
/*
Можливо, ви знаєте кілька досить великих ідеальних квадратів. Але як щодо НАСТУПНОГО?
Завершіть метод findNextSquare, який знаходить наступний інтегральний ідеальний квадрат після
переданого як параметра. Згадайте, що цілий повний квадрат — це таке ціле число n, що sqrt(n)
також є цілим числом.

Якщо аргумент сам по собі не є ідеальним квадратом, поверніть або -1, або порожнє значення,
наприклад None або null, залежно від вашої мови. Ви можете вважати, що аргумент невід’ємний.

Приклади: (Вхід --> Вихід)
121 --> 144
625 --> 676
114 --> -1 since 114 is not a perfect square
*/

// Мій варіант
function findNextSquare(sq) {
    const square = Math.sqrt(sq);
    return Number.isInteger(square) ? Math.pow(square + 1, 2) : -1;
}
// Цікаві варіанти з Codewars
function findNextSquare_(sq) {
    return Math.sqrt(sq) % 1 ? -1 : Math.pow(Math.sqrt(sq) + 1, 2);
}
// ================================================================================================
// ================================================================================================
//*-залишилось 1953шт
// console.time('timer_1');
// console.timeEnd('timer_1');