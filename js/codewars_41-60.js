"use strict"
// ================================================================================================
//*-Task №41 MakeUpperCase (8kyu)
/*
Напишіть функцію, яка перетворює вхідний рядок у верхній регістр.
*/

// Мій варіант
const makeUpperCase = (str) => (str.toUpperCase());

// Цікаві варіанти з Codewars
function makeUpperCase_(str) {
    return str.replace(/[a-z]/g, s => String.fromCharCode(s.charCodeAt(0) - 32))
}
// ================================================================================================
// ================================================================================================
//*-Task №42 Reversed sequence (8kyu)
/*
Створіть функцію, яка повертає масив цілих чисел від n до 1, де n>0.
Приклад: n=5 --> [5,4,3,2,1]
*/

// Мій варіант
const reverseSeq = n => {
    let arr = [];
    for (let i = 1; i <= n; i++) {
        arr.unshift(i);
    }
    return arr;
};

// Цікаві варіанти з Codewars
const reverseSeq_ = n => {
    return Array.from({ length: n }, (_, i) => n - i);
};
// ================================================================================================
// ================================================================================================
//*-Task №43 Is he gonna survive? (8kyu)
/*
Герой прямує до замку, щоб виконати свою місію. Однак йому сказали, що замок оточений двома могутніми
драконами! кожному дракону потрібно 2 кулі, щоб його перемогти, наш герой не знає, скільки куль він
повинен нести. Якщо припустити, що він збирається схопити певну кількість куль і рухатися вперед,
щоб битися з іншою певною кількістю драконів, чи виживе він?
Повертає true, якщо так, false в іншому випадку :)
Тести:
hero(10, 5 -> true
hero(7, 4) -> false
*/

// Мій варіант
function hero(bullets, dragons) {
    return bullets / dragons >= 2;
}

// Цікаві варіанти з Codewars
const hero_ = (bullets, dragons) => dragons * 2 <= bullets;
// ================================================================================================
// ================================================================================================
//*-Task №44 Sentence Smash (8kyu)
/*
Sentence Smash
Напишіть функцію, яка бере масив слів і розбиває їх разом у речення та повертає речення.
Ви можете ігнорувати будь-яку необхідність дезінфекції слів або додавання розділових знаків, але ви
повинні додавати пробіли між кожним словом. Будьте уважні, не повинно бути пробілів ні на початку,
ні в кінці речення!

Приклад
['hello', 'world', 'this', 'is', 'great'] => 'привіт, світе, це чудово'
*/

// Мій варіант
function smash(words) {
    return words.join(' ');
};

// Цікаві варіанти з Codewars
function smash_(words) {
    return words.join(' ').trim(); // Метод trim() видаляє пробіли з початку та кінця рядка.
};
// ================================================================================================
// ================================================================================================