//*-Task №141 Grasshopper - Basic Function Fixer (8kyu)
/*
Виправте функцію
Я створив цю функцію, щоб додати п’ять до будь-якого переданого числа та повернути нове значення.
Він не видає жодних помилок, але повертає неправильне число.
*/

// Мій варіант
const addFive = num => num + 5;

// Цікаві варіанти з Codewars

// ================================================================================================
// ================================================================================================
//*-Task №142 Add Length (8kyu)
/*
Що, якщо нам потрібно додати довжину слів, розділених пробілом, у кінець того самого слова
та повернути це як масив?

"apple ban" --> ["apple 5", "ban 3"]
"you will win" -->["you 3", "will 4", "win 3"]
Ваше завдання — написати функцію, яка приймає рядок і повертає масив/список із довжиною кожного слова,
доданого до кожного елемента.

Примітка. Рядок матиме принаймні один елемент; слова завжди будуть розділені пробілом.
*/

// Мій варіант
const addLength = (str) => str.split(' ').map(word => `${word} ${word.length}`);

// Цікаві варіанти з Codewars

// ================================================================================================
// ================================================================================================
//*-Task №143 Triple Trouble (8kyu)
/*
Потрійна біда
Створіть функцію, яка повертатиме рядок, який об’єднує всі літери трьох введених рядків у групи.
Взяти першу літеру всіх вхідних даних і згрупувати їх один біля одного. Зробіть це для кожної літери,
дивіться приклад нижче!

наприклад Вхід: "aa", "bb" , "cc" => Вихід: "abcabc"
Примітка. Можна очікувати, що всі вхідні дані будуть однакової довжини.
*/

// Мій варіант
function tripleTrouble(one, two, three) {
    let result = '';
    for(let i = 0; i < one.length; i++) {
        result += one[i] + two[i] + three[i];
    }
    return result;
}

// Цікаві варіанти з Codewars
function tripleTrouble_(one, two, three) {
    var result = "";
    for (let i = 0; i < one.length; i++) {
        result += one.charAt(i) + two.charAt(i) + three.charAt(i);
    }
    return result;
}
//
const tripleTrouble__ = (one, two, three) => one.split("").map((letter, index) => letter + two[index] + three[index]).join("");
//
function tripleTrouble___(one, two, three) {
    return one.replace(/./g, (v, i) => v + two[i] + three[i])
}
// ================================================================================================
// ================================================================================================
//*-Task №144 Bin to Decimal (8kyu)
/*
Виконайте функцію, яка перетворює двійкове число (у вигляді рядка) у десяткове число.
'10' -> 2
'1001001' -> 73
1024, 512, 256, 128, 64, 32, 16, 8, 4, 2, 1
*/

// Мій варіант
const bin = '1001001';
function binToDec(bin) {
    let binaryCodeArray = [1];
    let binaryCodeElem = 1;
    let binToArray = bin.split('').reverse();
    let result = 0;
    for(let i = 1; i < bin.length; i++) {
        binaryCodeElem *=  2;
        binaryCodeArray.push(binaryCodeElem);
    }
    for(let i = 0; i < bin.length; i++) {
        if(binToArray[i] === '1') {
            result += binaryCodeArray[i];
        }
    }
    return result;
}

// Цікаві варіанти з Codewars\
function binToDec_(bin) {
    return parseInt(bin, 2);
}
/*
parseInt(string, radix) - це вбудований метод JS, який використовується для перетворення рядка в ціле число
у відповідності з вказанною системою обчислення (radix).
У контексті перетворення двійкових чисел, радікс зазвичай встановлюють 2.

string: Рядок, який потрібно перетворити в число.
radix: Опціональний параметр, вказує на основну систему обчислення. Це ціле число від 2 до 36.
Якщо він не вказаний, JS автоматично обере його в залежності від рядка.
*/
//
const binToDec__ = bin => [...bin].reduce((dec, bit) => dec << 1 | bit, 0);

// ================================================================================================
// ================================================================================================
//*-Task №145 Plural (8kyu)
/*
Нам потрібна проста функція, яка визначає, чи потрібна множина чи ні. Він має приймати число та
повертати true, якщо з цим числом потрібно використовувати множину, або false, якщо ні.
Це буде корисно під час друку рядка, наприклад 5 хвилин, 14 яблук або 1 сонце.

Вам потрібно лише потурбуватися про правила англійської граматики для цієї ката, де все, що не є
одниною (одним із чогось), є множиною (не одним із чогось).

Усі значення будуть додатними цілими чи числами з плаваючою речовиною або нулем.
*/

// Мій варіант
function plural(n) {
    return n !== 1;
}

// Цікаві варіанти з Codewars\


// ================================================================================================
// ================================================================================================
//*-Task №146 Generate range of integers (8kyu)
/*
Реалізуйте функцію generateRange, яка приймає три аргументи (початок, зупинка, крок) і повертає
діапазон цілих чисел від початку до кінця (включно) з кроком кроку.

Приклади
(1, 10, 1) -> [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
(-10, 1, 1) -> [-10, -9, -8, -7, -6, -5, -4, -3, -2, -1, 0, 1]
(1, 15, 20) -> [1]
Примітка
почати < зупинити
крок > 0
*/

// Мій варіант
function generateRange(min, max, step){
    let result = [];
    for (let i = min; i <= max; i += step) {
        result.push(i);
    }
    return result;
}

// Цікаві варіанти з Codewars\
function generateRange_(min, max, step) {
    return min > max ? [] : [min, ...generateRange(min + step, max, step)];
}

// ================================================================================================
// ================================================================================================
//*-Task №147 Exclamation marks series #11: Replace all vowel to exclamation mark in the sentence (8kyu)
/*
Замініть у реченні всі голосні на знак оклику. aeiouAEIOU — голосна.

Приклади
replace("Hi!") === "H!!"
replace("!Hi! Hi!") === "!H!! H!!"
replace("aeiou") === "!!!!!"
replace("ABCDE") === "!BCD!"
*/

// Мій варіант
function replace(s) {
    return s.replace(/[aeiou]/gi, '!');
}

// Цікаві варіанти з Codewars

// ================================================================================================
// ================================================================================================
//*-Task №148 Hex to Decimal (8kyu)
/*
Виконайте функцію, яка перетворює шістнадцяткове число (у вигляді рядка) у десяткове число.
*/

// Мій варіант
function hexToDec(hexString) {
    return parseInt(hexString, 16);
}

// Цікаві варіанти з Codewars

// ================================================================================================
// ================================================================================================
//*-Task №149 Training JS #2: Basic data types--Number (8kyu)
/*
У JavaScript число є одним із основних типів даних. Він може бути додатним: 1,2,3,
від’ємним:-1,-100, цілим числом:123456, десятковим:3,1415926,-8,88 тощо.
Числа можуть використовувати такі оператори, як + - * / %

Я написав п’ять функцій equal1,equal2,equal3,equal4,equal5, визначає шість глобальних змінних
v1 v2 v3 v4 v5 v6, кожна функція має дві локальні змінні a,b, будь ласка, встановіть відповідне
значення для двох змінних (виберіть з v1 --v6), що повертає значення цієї функції дорівнює 100.
Функція дорівнює1 завершена, перегляньте цей приклад, щоб виконати наступні функції.
*/

// Мій варіант
let v1 = 50,
    v2 = 100,
    v3 = 150,
    v4 = 200,
    v5 = 2,
    v6 = 250;

function equal1(){
  let a = v1,   
      b = v1;   
  return a + b;
}

//Please refer to the example above to complete the following functions
function equal2(){
  let a =  v4, //set number value to a
      b =  v2; //set number value to b
  return a - b;
}

function equal3(){
  let a =  v1, //set number value to a
      b =  v5; //set number value to b
  return a * b;
}

function equal4(){
  let a =  v4, //set number value to a
      b =  v5; //set number value to b
  return a / b;
}

function equal5(){
  let a =  v6, //set number value to a
      b =  v3; //set number value to b
  return a % b;
}

// Цікаві варіанти з Codewars

// ================================================================================================
// ================================================================================================
//*-Task №150 Is this my tail? (8kyu)
/*
У зоопарк прибули нові тварини. Доглядач зоопарку стурбований тим, що, можливо, у тварин не ті хвости.
Щоб допомогти їй, ви повинні виправити несправну функцію, щоб переконатися, що другий аргумент (хвіст)
збігається з останньою літерою першого аргументу (тіло) - інакше хвіст не поміститься!

Якщо хвіст правильний, повертає true, інакше повертає false.
Аргументами завжди будуть непорожні рядки та звичайні літери.
*/

// Мій варіант
let correctTail = (bod, tail) => bod[bod.length - 1] === tail;

// Цікаві варіанти з Codewars
const correctTail_ = (x,y)=>x.endsWith(y);
// ================================================================================================
// ================================================================================================
//*-Task №151 101 Dalmatians - squash the bugs, not the dogs! (8kyu)
/*
Ваш друг ходив за цуценятами. Він повертається з кількома собаками, а ви просто не знаєте, як відповісти!

Відремонтувавши надану функцію, ви точно дізнаєтеся, як вам слід реагувати залежно від кількості собак,
які він має.
Кількість собак завжди буде числом, і завжди буде принаймні 1 собака.
*/

// Мій варіант
function howManyDalmatians(number) {
    var dogs = ["Hardly any", "More than a handful!", "Woah that's a lot of dogs!", "101 DALMATIANS!!!"];
    return number <= 10 ? dogs[0] : number <= 50 ? dogs[1] : number === 101 ? dogs[3] : dogs[2];
}

// Цікаві варіанти з Codewars

// ================================================================================================
// ================================================================================================
//*-Task №152 FIXME Replace all dots (8kyu)
/*
Наданий код має замінити всі крапки . у вказаному рядку str з тире -.
Але він не працює належним чином.
Виправте помилку, щоб ми всі могли повернутися додому раніше.
*/

// Мій варіант
var replaceDots = str => str.replace(/\./g, '-');

// Цікаві варіанти з Codewars
var replaceDots_ = function (str) {
    return str.replace(/[.]/g, '-');
}
//
const replaceDots__ = function (str) {
    return str.replaceAll(".", "-");
};
// ================================================================================================
// ================================================================================================
//*-Task №153 Hello, Name or World! (8kyu)
/*
Визначте метод hello, який повертає "Hello, Name!" на дане ім’я або каже Hello, World! якщо ім'я
не вказано (або передано як порожній рядок).
Припустимо, що ім’я є рядком, і воно перевіряє помилки користувача, щоб повернути ім’я з першої
великої літери (XXXX).
* With `name` = "john"  => return "Hello, John!"
* With `name` = "aliCE" => return "Hello, Alice!"
* With `name` not given or `name` = ""        => return "Hello, World!"
*/

// Мій варіант
function hello(name) {
    if (!name) { return 'Hello, World!' };
    const CORRECT_NAME = name.toLowerCase().replace(/./, `${name[0].toUpperCase()}`);
    return `Hello, ${CORRECT_NAME}!`;
}

// Цікаві варіанти з Codewars
const hello_ = s => `Hello, ${s ? (s[0].toUpperCase() + s.slice(1).toLowerCase()) : 'World'}!`;

// ================================================================================================
// ================================================================================================
//*-Task №154 Enumerable Magic #25 - Take the First N Elements (8kyu)
/*
Створіть функцію, яка приймає список/масив і число n, а повертає список/масив з перших n елементів
зі списку/масиву.

Якщо вам потрібна допомога, ось посилання:
https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/slice
*/

// Мій варіант
function take(arr, n) {
    return arr.slice(0, n);
}

// Цікаві варіанти з Codewars
const take_ = (arr, n) => arr.filter((a, index) => index < n);
// ================================================================================================
// ================================================================================================
//*-Task №155 Remove duplicates from list (8kyu)
/*
Визначте функцію, яка видаляє дублікати з масиву невід’ємних чисел і повертає його як результат.
Порядок послідовності повинен залишатися незмінним.
Input -> Output
[1, 1, 2] -> [1, 2]
[1, 2, 1, 1, 3, 2] -> [1, 2, 3]
*/

// Мій варіант
function distinct(a) {
    return a.filter((elem, index, array) => {
        return array.indexOf(elem) === index;
    });
}

// Цікаві варіанти з Codewars
function distinct_(a) {
    return [...new Set(a)];
}
//
function distinct__(a) {
    return Array.from(new Set(a));
}

// ================================================================================================
// ================================================================================================
//*-Task №156 Grasshopper - Debug (8kyu)
/*
Налагодити конвертер градусів Цельсія
Ваш друг подорожує за кордон, до Сполучених Штатів, тому він написав програму для перетворення
Фаренгейта в Цельсій. На жаль, його код має деякі помилки.

Знайдіть помилки в коді, щоб конвертер градусів Цельсія працював належним чином.
Щоб перетворити градуси Фаренгейта в градуси Цельсія:
Цельсій = (Фаренгейт - 32) * (5/9)
Пам’ятайте, що зазвичай температури за поточних погодних умов подаються в цілих числах.
Датчики температури можуть повідомляти про температуру з більш високою точністю, наприклад з точністю
до найближчої десятої. Однак помилка приладу робить таку точність ненадійною для багатьох типів
датчиків вимірювання температури.
*/

// Мій варіант
function weatherInfo(fahrenheit) {
    var celsius = (fahrenheit - 32) * (5 / 9);
    return celsius + `${celsius < 0 ? " is freezing temperature" : " is above freezing temperature"}`;
}

// Цікаві варіанти з Codewars
const weatherInfo_ = t => `${t = (t - 32) * (5 / 9)} is ${t > 0 ? 'above ' : ''}freezing temperature`;

// ================================================================================================
// ================================================================================================
//*-залишилось 226шт