//*-Task №121 Well of Ideas - Easy Version (8kyu)
/*
На кожну хорошу ідею ката, здається, є чимало поганих!

У цьому ката вам потрібно перевірити наданий масив (x) на наявність хороших ідей як 'good' і поганих
ідей як 'bad'. Якщо є одна чи дві хороші ідеї, поверніть 'Publish!', якщо їх більше 2, поверніть
'I smell a series!'. Якщо хороших ідей немає, як це часто буває, поверніть 'Fail!.
*/

// Мій варіант
function well(x) {
    let good = x.filter(elem => elem === 'good');
    return good.length > 2 ? 'I smell a series!' : good.length === 0 ? 'Fail!' : 'Publish!';
}
// Цікаві варіанти з Codewars

// ================================================================================================
// ================================================================================================
//*-Task №122 Vowel remover (8kyu)
/*
Створіть функцію під назвою shortcut для видалення голосних малих літер (a, e, i, o, u) у заданому рядку.

Приклади
"hello"     -->  "hll"
"codewars"  -->  "cdwrs"
"goodbye"   -->  "gdby"
"HELLO"     -->  "HELLO"
не турбуйтеся про великі голосні
y не вважається голосним для цієї ката
*/

// Мій варіант
function shortcut(string) {
    return string.split('a').join('').split('e').join('').split('i').join('').split('o').join('').split('u').join('');
}

// Цікаві варіанти з Codewars
function shortcut_(string) {
    return string.replace(/[aeiou]/g, '')
}
//
function shortcut__(s) {
    return s
        .replaceAll('e', '')
        .replaceAll('o', '')
        .replaceAll('a', '')
        .replaceAll('i', '')
        .replaceAll('u', '')
}
// ================================================================================================
// ================================================================================================
//*-Task №123 Training JS #1: create your first JS function and print "Hello World!" (8kyu)
/*
Перегляньте два приклади вище та напишіть свою першу функцію JS.
*/

// Мій варіант
function helloWorld() {
    let str = 'Hello World!';
    console.log(str);
}

// Цікаві варіанти з Codewars

//

// ================================================================================================
// ================================================================================================
//*-Task №124 Short Long Short (8kyu)
/*
Дано 2 рядки, a і b, повернути рядок у формі короткий+довгий+короткий, з коротшим рядком назовні
та довшим усередині. Рядки не будуть однакової довжини, але вони можуть бути порожніми (нульова довжина).

Довжина рядка не завжди збігається з кількістю символів

("1", "22") --> "1221"
("22", "1") --> "1221"
*/

// Мій варіант
function solution(a, b) {
    return a.length > b.length ? b + a + b : a + b + a;
}
//
const solution_ = (a, b) => {
    return a.length > b.length ? `${b}${a}${b}` : `${a}${b}${a}`
}

// Цікаві варіанти з Codewars

// ================================================================================================
// ================================================================================================
//*-Task №125 What's the real floor? (8kyu)
/*
Американці - дивні люди: в їхніх будинках перший поверх фактично перший, а 13-го немає (через забобони).
Напишіть функцію, яка, задана підлога в американській системі, повертає підлогу в європейській системі.

Коли 1-й поверх замінюється першим поверхом, а 13-й поверх видаляється, цифри переміщуються вниз,
щоб зайняти своє місце. Якщо вище 13, вони переміщаються вниз на два, оскільки під ними є
два пропущені числа.

Підвали (негативи) залишаються такими ж, як і універсальний рівень.
Приклади
1 => 0
0 => 0
5 => 4
15 => 13
-3 => -3
*/

// Мій варіант
function getRealFloor(n) {
    if (n > 0) {
        return n - 1 < 13 ? n - 1 : n - 2;
    } else {
        return n;
    }
}
// Цікаві варіанти з Codewars
function getRealFloor_(n) {
    return n > 13 ? n - 2 : n > 0 ? n - 1 : n;
}

// ================================================================================================
// ================================================================================================
//*-Task №126 Lario and Muigi Pipe Problem (8kyu)
/*
Проблема
Схоже, сантехнік-хуліган із братом знову бігають і псують ваші сцени.
Треба полагодити труби, що з’єднують етапи вашого рівня, перш ніж ви отримаєте скарги.
Труби правильні, якщо кожна труба після першої на 1 більша за попередню.

Маючи список унікальних чисел, відсортованих у порядку зростання, поверніть новий список,
щоб значення збільшувалися на 1 для кожного індексу від мінімального значення до максимального
значення (обидва включені).

приклад
Вхід: 1,3,5,6,7,8 Вихід: 1,2,3,4,5,6,7,8
*/

// Мій варіант
function pipeFix(numbers) {
    let result = [];
    for (let i = numbers[0]; i <= numbers[numbers.length - 1]; i++) {
        result.push(i);
    }
    return result;
}
// Цікаві варіанти з Codewars
let pipeFix_ = nums => Array.from({ length: nums.pop() - nums[0] + 1 }, (v, i) => i + nums[0]);

// ================================================================================================
// ================================================================================================
//*-залишилось 257шт