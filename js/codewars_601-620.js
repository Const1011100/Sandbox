//*-Task №601 Greed (7kyu)
/*
У своїй функції "getQuotes" я намагаюся витягти лише лапки з рядка.

#Приклад

getQuotes('"приклад цитати #1" деякий текст "приклад цитати #2"');
// має повернути ["\"приклад цитати №1\"","\"приклад цитати №2\""]
Однак мої результати тесту не такі, як очікувалося. ти можеш дізнатися, що я зробив не так?
*/

// Мій варіант
var reg = /".+?"/g;
function getQuotes(string) {
  return string.match(reg);
}
// Цікаві варіанти з Codewars
var reg_ = /"([^"]+)"/g;
function getQuotes_(string) {
  return string.match(reg_);
}
// ================================================================================================
// ================================================================================================
//*-Task №602 Check your arguments (7kyu)
/*
Боб написав функцію для визначення типу об’єкта. Він отримує будь-які примітивні значення або
об’єкти та повертає свій тип об’єкта як рядок. Але, здається, він працює неправильно.
Чи можете ви зрозуміти, чому, і виправити код для нього?
*/

// Мій варіант
function objectType(obj) {
  if (arguments.length === 0) {
    obj = null;
  }
  return Object.prototype.toString.call(obj);
}
// Цікаві варіанти з Codewars
function objectType_(obj) {
  return Object.prototype.toString.call(arguments.length == 0 ? null : obj);
}
// ================================================================================================
// ================================================================================================
//*-Task №602 Speed Control (7kyu)
/*
У машині Джона GPS записує кожні s секунд відстань, пройдену від початку (відстані вимірюються
в довільних, але послідовних одиницях). Наприклад, нижче наведено частину запису з s = 15:
x = [0.0, 0.19, 0.5, 0.75, 1.0, 1.25, 1.5, 1.75, 2.0, 2.25]

Розділи:

0,0-0,19, 0,19-0,5, 0,5-0,75, 0,75-1,0, 1,0-1,25, 1,25-1,50, 1,5-1,75, 1,75-2,0, 2,0-2,25
Ми можемо обчислити середню годинну швидкість Джона на кожній ділянці, і отримаємо:

[45.6, 74.4, 60.0, 60.0, 60.0, 60.0, 60.0, 60.0, 60.0]
Для заданих s і x завдання полягає в тому, щоб повернути як ціле число *поверх* максимальної
середньої швидкості за годину, отриманої на ділянках x.
Якщо x length менше або дорівнює 1, поверніть 0, оскільки автомобіль не рухався.

приклад:
З наведеними вище даними ваша функція gps(s, x) має повернути 74

Примітка
З плаваючими значеннями може статися, що результати залежать від порядку операцій.
Щоб розрахувати годинну швидкість, ви можете використовувати:
(3600 * delta_distance) / с.

Щасливого кодування!
*/

// Мій варіант
function gps(s, x) {
  if (x.length <= 1) {
    return 0;
  }
  let temp = [];
  for (let i = 0; i < x.length - 1; i++) {
    temp.push(x[i + 1] - x[i]);
  }
  let temp2 = temp.map((n) => Math.floor((3600 * n) / s));
  return Math.max(...temp2);
}
// Цікаві варіанти з Codewars
const gps_ = (s, x) => {
  if (x.length <= 1) {
    return 0;
  }

  let output = [];
  for (let i = 0; i < x.length - 1; i++) {
    output.push(((x[i + 1] - x[i]) * 3600) / s);
  }

  return Math.max(...output);
};
//
const getSpeed = (a, b, s) => Math.floor(((b - a) / s) * 60 * 60);
const reduceRecords = (s, x) =>
  x.reduce(
    (p, c, i, a) => (i === 0 ? p : p.concat(getSpeed(a[i - 1], c, s))),
    []
  );
const gps = (s, x) => (x.length < 2 ? 0 : Math.max(...reduceRecords(s, x)));

// ================================================================================================
// ================================================================================================
//*-залишилось 1774шт
// console.time('timer_1');
// console.timeEnd('timer_1');
