//*-Task №221 Kata Example Twist (8kyu)
/*
Це легкий поворот до прикладу ката (надається Codewars під час навчання створенню власного ката).
Додайте значення "codewars" до масиву веб-сайтів 1000 разів.
*/

// Мій варіант
var websites = [];
for (let i = 0; i < 1000; i++) {
    websites.push('codewars');
}
// Цікаві варіанти з Codewars
var websites_ = new Array(1000).fill("codewars");
// ================================================================================================
// ================================================================================================
//*-Task №222 Miles per gallon to kilometers per liter (8kyu)
/*
Іноді мені хочеться швидко перетворити милі на імперський галон (mpg) у кілометри на літр (kpl).
Створіть програму, яка відображатиме кількість кілометрів на літр (вихід) на основі кількості миль на імперський галон (вхід).
Не забудьте округлити результат до двох знаків після коми.

Деякі корисні асоціації, що стосуються цієї ката:
1 Imperial Gallon = 4.54609188 litres
1 Mile = 1.609344 kilometres
*/

// Мій варіант
function converter(mpg) {
    const milesToKm = 1.609344;
    const gallonsToLiters = 4.54609188;
    const kpl = (mpg * milesToKm) / gallonsToLiters;
    return Number(kpl.toFixed(2));
}
// Цікаві варіанти з Codewars
const LITRES_PER_GALLON = 4.54609188;
const KILOMETERS_PER_MILE = 1.609344;
function converter_(mpg) {
    return Math.round(100 * mpg * KILOMETERS_PER_MILE / LITRES_PER_GALLON) / 100;
}
// ================================================================================================
// ================================================================================================
//*-Task №223 Are arrow functions odd? (8kyu)
/*
Час перевірити свої базові знання про функції! Повернути коефіцієнти зі списку:
[1, 2, 3, 4, 5]  -->  [1, 3, 5]
[2, 4, 6]        -->  []
*/

// Мій варіант
function odds(values) {
    return values.filter(num => num % 2 !== 0);
}
// Цікаві варіанти з Codewars

// ================================================================================================
// ================================================================================================
//*-Task №224 Get number from string (8kyu)
/*
Напишіть функцію, яка видаляє з рядка всі символи, що не є цифрами, а решту перетворює на число.
Наприклад: "hell5o world6" -> 56
*/

// Мій варіант
function getNumberFromString(s) {
    return Number(s.replace(/[^0-9]/g, ''));
}
// Цікаві варіанти з Codewars
function getNumberFromString(s) {
    return +s.replace(/\D/g, "");
}
// ================================================================================================
// ================================================================================================
//*-Task №225 Multiply the number (8kyu)
/*
Джеку дуже подобається його число п’ять: хитрість тут полягає в тому, що вам потрібно помножити
кожне число на 5, дорівнюючи кількості цифр кожного числа, отже, наприклад:
  3 -->    15  (  3 * 5¹)
 10 -->   250  ( 10 * 5²)
200 --> 25000  (200 * 5³)
  0 -->     0  (  0 * 5¹)
 -3 -->   -15  ( -3 * 5¹)
*/

// Мій варіант
function multiply(number) {
    const numberLength = String(Math.abs(number)).length;
    return number * (5 ** numberLength);
}
// Цікаві варіанти з Codewars
function multiply_(number) {
    return number * Math.pow(5, Math.abs(number).toString().length);
}
// ================================================================================================
// ================================================================================================
//*-Task №226 Sleigh Authentication (8kyu)
/*
Наближається Різдво і багато хто мріяв покататися на санях Діда Мороза. Але, звичайно ж, користуватися
цим чудовим транспортом має право тільки сам Санта. А для того, щоб переконатися, що в сани може сісти
тільки він, існує механізм аутентифікації.

Ваше завдання — реалізувати метод authenticate() саней, який бере ім’я людини, яка хоче сісти на сани,
і секретний пароль. Якщо і тільки якщо ім'я дорівнює "Санта-Клаус", а пароль - "Хо-хо-хо!"
(так, навіть у Санти є секретний пароль із великими та малими літерами та спеціальними символами :D),
значення, що повертається, має бути true. В іншому випадку він повинен повернути false.
*/

// Мій варіант
function Sleigh() { }
Sleigh.prototype.authenticate = function (name, password) {
    if (name === "Santa Claus" && password === "Ho Ho Ho!") {
        return true;
    }
    return false;
};
// Цікаві варіанти з Codewars

// ================================================================================================
// ================================================================================================
//*-Task №227 Is there a vowel in there? (8kyu)
/*
Дано масив чисел, перевірте, чи є якісь із них кодами символів для голосних нижнього регістру (a, e, i, o, u).
Якщо вони є, змініть значення масиву на рядок цієї голосної.
Повернути отриманий масив.
*/

// Мій варіант
function isVow(a) {
    return a.map(num => {
        if (String.fromCharCode(num) === 'a') {
            return String.fromCharCode(num);
        }
        if (String.fromCharCode(num) === 'e') {
            return String.fromCharCode(num);
        }
        if (String.fromCharCode(num) === 'i') {
            return String.fromCharCode(num);
        }
        if (String.fromCharCode(num) === 'o') {
            return String.fromCharCode(num);
        }
        if (String.fromCharCode(num) === 'u') {
            return String.fromCharCode(num);
        }
        return num;
    })
}
// Цікаві варіанти з Codewars
function isVow_(a) {
    for (var i = 0, l = a.length; i < l; ++i) {
        var char = String.fromCharCode(a[i])
        if ('aeiou'.indexOf(char) !== -1)
            a[i] = char;
    }

    return a;
}
//
const isVow__ = a => a.map(x => 'aeiou'.includes(y = String.fromCharCode(x)) ? y : x);
// ================================================================================================
// ================================================================================================
//*-Task №228  Tip Calculator (8kyu)
/*
Виконайте функцію, яка обчислює, скільки вам потрібно дати чайових на основі загальної суми рахунку та послуги.
Потрібно враховувати такі рейтинги:

Жахливо: чайові 0%
Погано: чайові 5%
Добре: чайові 10%
Чудово: чайові 15%
Відмінно: чайові 20%
Оцінка нечутлива до регістру (тому "чудово" = "ЧУДОВО"). Якщо отримано нерозпізнану оцінку, потрібно повернути:

«Рейтинг не розпізнано» в Javascript
Оскільки ви добра людина, ви завжди округлюєте чайові, незалежно від послуги.
*/

// Мій варіант
function calculateTip(amount, rating) {
    const tipList = {
        terrible: 0,
        poor: 0.05,
        good: 0.1,
        great: 0.15,
        excellent: 0.20,
    }
    if (!tipList.hasOwnProperty(rating.toLowerCase())) {
        return "Rating not recognised";
    }
    return Math.ceil(amount * tipList[rating.toLowerCase()]);
}
// Цікаві варіанти з Codewars
const TIPS = {
    "terrible": 0.0,
    "poor": 0.05,
    "good": 0.1,
    "great": 0.15,
    "excellent": 0.2
};

const calculateTip_ = (amount, rating) => {
    rating = rating.toLowerCase();

    return rating in TIPS ? Math.ceil(TIPS[rating] * amount) : "Rating not recognised";
};
// ================================================================================================
// ================================================================================================
//*-Task №229 A Strange Trip to the Market (8kyu)
/*
Оскільки Нессі є майстром маскування, єдиний спосіб точно визначити це знайти фразу "tree fiddy".
Оскільки ви втомилися від захоплення цього монстра, настав час закодувати рішення для пошуку Лох-Неського
чудовиська. Зверніть увагу, що фразу також можна записати як "3,50" або "три п'ятдесят".
Ваша функція має повертати true, якщо ви розмовляєте з The Loch Ness Moster, і false в іншому випадку.
*/

// Мій варіант
function isLockNessMonster(s) {
    s = s.toLowerCase();
    const nessiePhrases = ["tree fiddy", "3.50", "three fifty"];
    for (let phrase of nessiePhrases) {
        if (s.includes(phrase)) {
            return true;
        }
    }
    return false;
}
// Цікаві варіанти з Codewars
const isLockNessMonster_ = (s) => /tree fiddy|three fifty|3.50/.test(s);
// ================================================================================================
// ================================================================================================
//*-Task №230 get ascii value of character (8kyu)
/*
Отримати значення ASCII символу.
*/

// Мій варіант
function getASCII(c) {
    return c.charCodeAt()
}
// Цікаві варіанти з Codewars
const getASCII_ = c => c.charCodeAt(0);
// ================================================================================================
// ================================================================================================
//*-Task №231 validate code with simple regex (8kyu)
/*
Основні завдання регулярних виразів. Напишіть функцію, яка приймає числовий код будь-якої довжини.
Функція повинна перевірити, чи починається код з 1, 2 або 3, і повернути true, якщо так.
В іншому випадку поверніть false.

Ви можете припустити, що введенням завжди буде число.
*/

// Мій варіант
function validateCode(code) {
    return /^[1-3]/.test(code);
}
// Цікаві варіанти з Codewars

// ================================================================================================
// ================================================================================================
//*-Task №232 OOP: Object Oriented Piracy (8kyu)
/*
Привіт, друже!

Ви лідер невеликої піратської команди. І у вас є план. За допомогою ООП ви хочете створити досить
ефективну систему для ідентифікації кораблів із важкою здобиччю на борту!
На ваш жаль, сьогодні люди дуже важать, тож як дізнатися, що корабель наповнений золотом, а не людьми?
Ви починаєте з написання загального класу / структури корабля:
class Ship {
  constructor(draft, crew) {
    this.draft = draft
    this.crew = crew
  }
}
Щоразу, коли ваші шпигуни бачать, що новий корабель заходить у док, вони створюватимуть новий
об’єкт корабля на основі своїх спостережень:
draft  - оцінка ваги судна на основі того, наскільки низько воно знаходиться у воді
crew - кількість екіпажу на борту
const titanic = new Ship(15, 10);

Завдання
Ви маєте доступ до корабля «проект» і «екіпаж». «Осадка» — це загальна вага судна,
а «екіпаж» — кількість людей на судні.
Кожен член екіпажу додає 1,5 одиниці до осадки корабля. Якщо після зняття ваги екіпажу осадка
все ще більше 20, то судно варто грабувати. Будь-який корабель такої ваги повинен мати багато здобичі!

Додайте метод
isWorthIt
щоб вирішити, чи гідний корабель пограбування. Наприклад:
titanic.isWorthIt() // повертає false
*/

// Мій варіант
class Ship {
    constructor(draft, crew) {
        this.draft = draft
        this.crew = crew
    }
    isWorthIt() {
        const totalWeight = this.draft - (this.crew * 1.5);
        return totalWeight > 20;
    }
}
// Цікаві варіанти з Codewars

// ================================================================================================
// ================================================================================================
//*-залишилось 149шт
// console.time('timer_1');
// console.timeEnd('timer_1');