//*-Task №301 Be Concise I - The Ternary Operator (8kyu)
/*
Будьте лаконічними. Я – тернарний оператор
Вам надається функція describeAge / describe_age, яка приймає параметр age
(який завжди буде додатним цілим числом) і виконує наступне:

Якщо вік 12 або менше, повертається "You're a(n) kid"
Якщо вік — від 13 до 17 (включно), повертається «Ти підліток»
Якщо вік становить від 18 до 64 (включно), повертається "Ви дорослий"
Якщо вік становить 65 або більше, повертається "Ви літня людина"
Ваше завдання максимально скоротити код. Зауважте, що надіслати вказаний код не спрацює,
оскільки існує обмеження на 137 символів.
*/

// Мій варіант
const describeAge = age => `You're a(n) ${age <= 12 ? 'kid' : age <= 17 ? 'teenager' : age <= 64 ? 'adult' : 'elderly'}`;
// Цікаві варіанти з Codewars
function describeAge_(age) {
    return "You're a(n) " + (age < 13 ? "kid" : age < 18 ? "teenager" : age < 65 ? "adult" : "elderly")
}
// ================================================================================================
// ================================================================================================
//*-Task №302 Enumerable Magic #2 - True for Any? (8kyu)
/*
Створити будь-який? (JS: any) функція, яка приймає масив і блок (JS: function) і повертає true,
якщо блок (/function) повертає true для будь-якого елемента в масиві. Якщо масив порожній,
функція має повернути false.
*/

// Мій варіант
function any(arr, fun) {
    return arr.length > 0 ? arr.some(item => fun(item)) : false;
}
// Цікаві варіанти з Codewars
function any_(arr, fun) {
    return arr.some(fun)
}
// ================================================================================================
// ================================================================================================
//*-Task №303 Playing with cubes II  (8kyu)
/*
Привіт Codewarrior!

Ви вже реалізували клас Cube, але тепер нам знову потрібна ваша допомога! Я про конструктори.
У нас такого немає. Давайте закодуємо два: один приймає ціле число, а другий не обробляє жодних аргументів!
Також ми маємо проблему з від’ємними значеннями. Виправте код, щоб від'ємні значення були замінені на додатні!
Конструктор, який не приймає аргументів, повинен призначити 0 властивості Side куба.
*/

// Мій варіант
class Cube {
    constructor(side = 0) {
        this.setSide(side);
    }

    getSide() {
        return this.side;
    }

    setSide(n) {
        this.side = Math.abs(n);
    }
}
// Цікаві варіанти з Codewars

// ================================================================================================
// ================================================================================================
//*-залишилось 79шт
// console.time('timer_1');
// console.timeEnd('timer_1');