//*-Task №383 Vowel Count (7kyu)
/*
Повертає кількість голосних у заданому рядку.
Ми будемо розглядати (a, e, i, o, u) як голосні для цієї ката (але не y).
Рядок введення складатиметься лише з малих літер та/або пробілів.
*/

// Мій варіант
function getCount(str) {
    const targets = ['a', 'e', 'i', 'o', 'u'];
    let allMatches = 0;
    for (let i = 0; i < targets.length; i++) {
        const regExp = new RegExp(`${targets[i]}`, 'g');
        let matches = str.match(regExp);
        if (matches !== null) {
            allMatches += matches.length;
        }
    }
    return allMatches;
}
// Цікаві варіанти з Codewars

// ================================================================================================
// ================================================================================================
//*-Task №384 Disemvowel Trolls (7kyu)
/*
Тролі атакують ваш розділ коментарів!
Поширеним способом вирішення цієї ситуації є видалення всіх голосних із коментарів тролів,
нейтралізуючи загрозу.

Ваше завдання — написати функцію, яка приймає рядок і повертає новий рядок із видаленням усіх голосних.
Наприклад, рядок "This website is for losers LOL!" стане "Ths wbst s fr lsrs LL!".

Примітка: для цієї ката y не вважається голосною.
*/

// Мій варіант
function disemvowel(str) {
    const vowels = ['a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'];
    const symbols = str.split('');
    const result = [];
    symbols.forEach(symbol => {
        if (!vowels.includes(symbol)) { result.push(symbol) };
    });
    return result.join('');
}
// Цікаві варіанти з Codewars
function disemvowel_(str) {
    const vowels = 'aeiouAEIOU';

    return str
        .split('')
        .filter(char => !vowels.includes(char))
        .join('');
}
// ================================================================================================
// ================================================================================================
//*-Task №385 Square Every Digit (7kyu)
/*
Ласкаво просимо. У цій ката вас просять звести в квадрат кожну цифру числа та об’єднати їх.

Наприклад, якщо ми запустимо 9119 через функцію, вийде 811181. (81-1-1-81)
Приклад №2: введення 765 повертатиме 493625. (49-36-25)

Примітка: функція приймає ціле число та повертає ціле число.
Щасливого кодування!
*/

// Мій варіант
function squareDigits(num) {
    const numbers = num.toString().split('');
    const square  = numbers.map(number => { return (+number) ** 2} );
    const newNumber = square .join('');
    return +newNumber;
}
// Цікаві варіанти з Codewars

// ================================================================================================
// ================================================================================================
//*-Task №386 Highest and Lowest (7kyu)
/*
У цьому маленькому завданні вам надається рядок чисел, розділених пробілами, і ви повинні повернути
найбільше та найменше число.

Приклади:
highAndLow("1 2 3 4 5");  // return "5 1"
highAndLow("1 2 -3 4 5"); // return "5 -3"
highAndLow("1 9 3 4 -5"); // return "9 -5"

Примітки:
Усі числа є дійсними Int32, перевіряти їх не потрібно.
У вхідному рядку завжди буде принаймні одне число.
Вихідний рядок має складатися з двох чисел, розділених одним пробілом, причому першим є найвище число.
*/

// Мій варіант
function highAndLow(numbers) {
    const maxNum = Math.max(...numbers.split(' '));
    const minNum = Math.min(...numbers.split(' '));
    return `${maxNum} ${minNum}`;
}
// Цікаві варіанти з Codewars

// ================================================================================================
// ================================================================================================
//*-Task №387 Descending Order (7kyu)
/*
Ваше завдання полягає в тому, щоб створити функцію, яка може приймати будь-яке невід’ємне ціле число
як аргумент і повертати його разом із цифрами в порядку спадання. По суті, переставте цифри, щоб
отримати найбільше можливе число.

Приклади:
Input: 42145 Output: 54421
Input: 145263 Output: 654321
Input: 123456789 Output: 987654321
*/

// Мій варіант
function descendingOrder(n) {
    const result = n.toString()
        .split('')
        .map(elem => Number(elem))
        .sort((a, b) => b - a)
        .join('');

    return Number(result);
}
// Цікаві варіанти з Codewars

// ================================================================================================
// ================================================================================================
//*-Task №388 List Filtering (7kyu)
/*
У цій ката ви створите функцію, яка приймає список невід’ємних цілих чисел і рядків і повертає
новий список із відфільтрованими рядками.
Приклад:
filter_list([1,2,'a','b']) == [1,2]
filter_list([1,'a','b',0,15]) == [1,0,15]
filter_list([1,2,'aasf','1','123',123]) == [1,2,123]
*/

// Мій варіант
function filter_list(l) {
    return l.filter(elem => typeof elem === 'number');
}
// Цікаві варіанти з Codewars

// ================================================================================================
// ================================================================================================
//*-залишилось 1965шт
// console.time('timer_1');
// console.timeEnd('timer_1');
