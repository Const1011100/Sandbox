//*-Task №341 Flick Switch (8kyu)
/*
Завдання
Створіть функцію, яка завжди повертає true для кожного елемента в заданому списку.
Однак, якщо елементом є слово 'flick', перейдіть на завжди повертати протилежне логічне значення.

Приклади
['codewars', 'flick', 'code', 'wars'] ➞ [True, False, False, False]
['flick', 'chocolate', 'adventure', 'sunshine'] ➞ [False, False, False, False]
['bicycle', 'jarmony', 'flick', 'sheep', 'flick'] ➞ [True, True, False, False, True]

Примітки
"повертати" завжди вказуватиметься малими літерами.
Список може містити кілька рухів.
Переключіть логічне значення на той самий елемент, що й сам рух.
*/

// Мій варіант
function flickSwitch(arr) {
    let pointer = true;
    const result = [];
    arr.forEach(elem => {
        if (elem === 'flick') {
            pointer = !pointer;
        }
        result.push(pointer);
    })
    return result;
}
// Цікаві варіанти з Codewars
function flickSwitch(arr) {
    let returning = true;
    return arr.map((v) => {
        return (v === "flick") ? returning = !returning : returning;
    })
}
// ================================================================================================
// ================================================================================================
//*-Task №342 Up and down, the string grows (8kyu)
/*
Багато мов програмування забезпечують функцію перетворення рядка у верхній або нижній регістр.
Наприклад, upcase/downcase у Ruby, upper/lower у Python, toUpperCase/toLowerCase у Java/JavaScript,
uppercase/lowercase у Kotlin. Як правило, ці методи не змінюють розмір рядка.

Наприклад, у Ruby str.upcase.downcase.size == str.size є істинним для більшості випадків.

Однак у деяких особливих випадках довжина перетвореного рядка може бути довшою за оригінал.
Чи можете ви знайти рядок, який задовольняє цим критеріям?

Наприклад, у Ruby це означає str.upcase.downcase.size > str.size

Ви повинні просто встановити значення STRANGE_STRING, щоб відповідати попереднім критеріям.
Примітка: метапрограмування заборонено в цій ката. Отже, розмір вашого рішення обмежений.
*/

// Мій варіант
const STRANGE_STRING = "ß";
/*
Исходная строка ß представляет собой немецкую букву "ß".
При преобразовании этой строки к верхнему регистру, результат будет SS.
В немецком языке, когда буква ß преобразуется к верхнему регистру, она заменяется на SS.
При преобразовании строки к нижнему регистру, она остается такой же, потому что ß уже является нижним регистром.
*/
// Цікаві варіанти з Codewars

// ================================================================================================
// ================================================================================================
//*-залишилось 40шт
// console.time('timer_1');
// console.timeEnd('timer_1');